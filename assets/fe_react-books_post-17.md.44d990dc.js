import{_ as s,o as n,c as a,a as e}from"./chunks/framework.9fab0263.js";const y=JSON.parse('{"title":"前端应用状态管理 —— 状态提升","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react-books/post-17.md","lastUpdated":1716978866000}'),o={name:"fe/react-books/post-17.md"},p=e(`<h1 id="前端应用状态管理-——-状态提升" tabindex="-1">前端应用状态管理 —— 状态提升 <a class="header-anchor" href="#前端应用状态管理-——-状态提升" aria-label="Permalink to &quot;前端应用状态管理 —— 状态提升&quot;">​</a></h1><blockquote><p>React.js 小书是一个开源、免费、专业、简单的 React.js 教程。</p></blockquote><p>上一个评论功能的案例中，可能会有些同学会对一个地方感到疑惑： <code>CommentList</code> 中显示的评论列表数据为什么要通过父组件 <code>CommentApp</code> 用 <code>props</code> 传进来？为什么不直接存放在 <code>CommentList</code> 的 <code>state</code> 当中？例如这样做也是可以的：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">CommentList</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">extends</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">state</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> comments</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [] </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">addComment</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">comment</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">state</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">comments</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">comment</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">setState</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      comments</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">state</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">comments</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">render</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">{this.</span><span style="color:#BABED8;">state</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">comments</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">comment</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">i</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> (</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Comment</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">comment</span><span style="color:#89DDFF;">={</span><span style="color:#BABED8;">comment</span><span style="color:#89DDFF;">} </span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">={</span><span style="color:#BABED8;">i</span><span style="color:#89DDFF;">} /&gt;</span></span>
<span class="line"><span style="color:#BABED8;">        ))</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>如果把这个 <code>comments</code> 放到 <code>CommentList</code> 当中，<em>当有别的组件也依赖这个 <code>comments</code> 数据或者有别的组件会影响这个数据</em>，那么就带来问题了。举一个数据依赖的例子：例如，现在我们有另外一个和 <code>CommentList</code> 同级的 <code>CommentList2</code> ，也是需要显示同样的评论列表数据。</p><p><a href="http://huzidaha.github.io/static/assets/img/posts/85B8A2B7-288F-4FC2-A0AB-C4E153BB3854.png" target="_blank"><img src="http://huzidaha.github.io/static/assets/img/posts/85B8A2B7-288F-4FC2-A0AB-C4E153BB3854.png" alt="React.js 小书实战之状态管理图片"></a></p><p><code>CommentList2</code> 和 <code>CommentList</code> 并列为 <code>CommentApp</code> 的子组件，它也需要依赖 <code>comments</code> 显示评论列表。但是因为 <code>comments</code> 数据在 <code>CommentList</code> 中，它没办法访问到。</p><p>遇到这种情况，我们<em>将这种组件之间共享的状态交给组件最近的公共父节点保管</em>，然后通过 <code>props</code> 把状态传递给子组件，这样就可以在组件之间共享数据了。</p><p><a href="http://huzidaha.github.io/static/assets/img/posts/C547BD3E-F923-4B1D-96BC-A77966CDFBEF.png" target="_blank"><img src="http://huzidaha.github.io/static/assets/img/posts/C547BD3E-F923-4B1D-96BC-A77966CDFBEF.png" alt="React.js 小书实战之状态管理图片"></a></p><p>在我们的例子当中，如果把 <code>comments</code> 交给父组件 <code>CommentApp</code> ，那么 <code>CommentList</code> 和 <code>CommentList2</code> 都可以通过 <code>props</code> 获取到 <code>comments</code>，React.js 把这种行为叫做“状态提升”。</p><p>但是这个 <code>CommentList2</code> 是我们临时加上去的，在实际案例当中并没有涉及到这种组件之间依赖 <code>comments</code> 的情况，为什么还需要把 <code>comments</code> 提升到 <code>CommentApp</code>？那是因为有个组件会影响到 <code>comments</code> ，那就是 <code>CommentInput</code>。<code>CommentInput</code> 产生的新的评论数据是会插入 <code>comments</code> 当中的，所以我们遇到这种情况也会把状态提升到父组件。</p><p>总结一下：当某个状态被多个组件<em>依赖</em>或者<em>影响</em>的时候，就把该状态提升到这些组件的最近公共父组件中去管理，用 <code>props</code> 传递<em>数据或者函数</em>来管理这种<em>依赖</em>或着<em>影响</em>的行为。</p><p>我们来看看状态提升更多的例子，假设现在我们的父组件 <code>CommentApp</code> 只是属于更大的组件树 <code>PostApp</code> 的一部分：</p><p><a href="http://huzidaha.github.io/static/assets/img/posts/5.007.png" target="_blank"><img src="http://huzidaha.github.io/static/assets/img/posts/5.007.png" alt="React.js 小书实战之状态管理图片"></a></p><p>而这个更大的组件树的另外的子树的 <code>CommentsCount</code> 组件也需要依赖 <code>comments</code> 来显示评论数，那我们就只能把 <code>comments</code> 继续提升到这些依赖组件的最近公共父组件 <code>PostApp</code> 当中。</p><p>现在继续让我们的例子极端起来。假设现在 <code>PostApp</code> 只是另外一个更大的父组件 <code>Index</code> 的子树。而 <code>Index</code> 的某个子树的有一个按钮组件可以一键清空所有 <code>comments</code>（也就是说，这个按钮组件可以影响到这个数据），我们只能继续 <code>commenets</code> 提升到 <code>Index</code> 当中。</p><p>你会发现这种无限制的提升不是一个好的解决方案。一旦发生了提升，你就需要修改原来保存这个状态的组件的代码，也要把整个数据传递路径经过的组件都修改一遍，好让数据能够一层层地传递下去。这样对代码的组织管理维护带来很大的问题。到这里你可以抽象一下问题：</p><blockquote><p>如何更好的管理这种被多个组件所依赖或影响的状态？</p></blockquote><p>你可以看到 React.js 并没有提供好的解决方案来管理这种组件之间的共享状态。在实际项目当中状态提升并不是一个好的解决方案，所以我们后续会引入 Redux 这样的状态管理工具来帮助我们来管理这种共享状态，但是在讲解到 Redux 之前，我们暂时采取状态提升的方式来进行管理。</p><p>对于不会被多个组件依赖和影响的状态（例如某种下拉菜单的展开和收起状态），一般来说只需要保存在组件内部即可，不需要做提升或者特殊的管理。</p><h2 id="课后练习" tabindex="-1">课后练习 <a class="header-anchor" href="#课后练习" aria-label="Permalink to &quot;课后练习&quot;">​</a></h2><ul><li><a target="_blank" href="http://scriptoj.com/problems/9">百分比换算器</a></li></ul><hr><ul style="font-size:14px;margin-top:-10px;"><li> 作者：<a href="https://www.zhihu.com/people/hu-zi-da-ha" target="_blank">胡子大哈</a></li><li> 原文链接：<a href="http://huziketang.com/books/react"> http://huziketang.com/books/react </a></li></ul>`,24),l=[p];function t(c,r,m,i,d,F){return n(),a("div",null,l)}const B=s(o,[["render",t]]);export{y as __pageData,B as default};
