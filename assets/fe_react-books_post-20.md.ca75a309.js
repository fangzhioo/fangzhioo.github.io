import{_ as e,o as t,c as o,a}from"./chunks/framework.9fab0263.js";const u=JSON.parse('{"title":"更新阶段的组件生命周期","description":"","frontmatter":{},"headers":[],"relativePath":"fe/react-books/post-20.md","lastUpdated":1716978866000}'),c={name:"fe/react-books/post-20.md"},r=a('<h1 id="更新阶段的组件生命周期" tabindex="-1">更新阶段的组件生命周期 <a class="header-anchor" href="#更新阶段的组件生命周期" aria-label="Permalink to &quot;更新阶段的组件生命周期&quot;">​</a></h1><blockquote><p>React.js 小书是一个开源、免费、专业、简单的 React.js 教程。</p></blockquote><p>从之前的章节我们了解到，组件的挂载指的是将组件渲染并且构造 DOM 元素然后插入页面的过程。<em>这是一个从无到有的过程</em>，React.js 提供一些生命周期函数可以给我们在这个过程中做一些操作。</p><p>除了挂载阶段，还有一种“更新阶段”。说白了就是 <code>setState</code> 导致 React.js 重新渲染组件并且把组件的变化应用到 DOM 元素上的过程，<em>这是一个组件的变化过程</em>。而 React.js 也提供了一系列的生命周期函数可以让我们在这个组件更新的过程执行一些操作。</p><p>这些生命周期在深入项目开发阶段是非常重要的。而要完全理解更新阶段的组件生命周期是一个需要经验和知识积累的过程，你需要对 Virtual-DOM 策略有比较深入理解才能完全掌握，但这超出了本书的目的。<em>本书的目的是为了让大家快速掌握 React.js 核心的概念，快速上手项目进行实战</em>。所以对于组件更新阶段的组件生命周期，我们简单提及并且提供一些资料给大家。</p><p>这里为了知识的完整，补充关于更新阶段的组件生命周期：</p><ol><li><code>shouldComponentUpdate(nextProps, nextState)</code>：你可以通过这个方法控制组件是否重新渲染。如果返回 <code>false</code> 组件就不会重新渲染。这个生命周期在 React.js 性能优化上非常有用。</li><li><code>componentWillReceiveProps(nextProps)</code>：组件从父组件接收到新的 <code>props</code> 之前调用。</li><li><code>componentWillUpdate()</code>：组件开始重新渲染之前调用。</li><li><code>componentDidUpdate()</code>：组件重新渲染并且把更改变更到真实的 DOM 以后调用。</li></ol><p>大家对这更新阶段的生命周期比较感兴趣的话可以查看<a href="https://facebook.github.io/react/docs/react-component.html" target="_blank" rel="noreferrer">官网文档</a>。</p><p><em>但这里建议大家可以先简单了解 React.js 组件是有更新阶段的，并且有这么几个更新阶段的生命周期即可</em>。然后在深入项目实战的时候逐渐地掌握理解他们，现在并不需要对他们放过多的精力。</p><p>有朋友对 Virtual-DOM 策略比较感兴趣的话，可以参考这篇博客：<a href="https://github.com/livoras/blog/issues/13" target="_blank" rel="noreferrer">深度剖析：如何实现一个 Virtual DOM 算法 </a> 。对深入理解 React.js 核心算法有一定帮助。</p><hr><ul style="font-size:14px;margin-top:-10px;"><li> 作者：<a href="https://www.zhihu.com/people/hu-zi-da-ha" target="_blank">胡子大哈</a></li><li> 原文链接：<a href="http://huziketang.com/books/react"> http://huziketang.com/books/react </a></li></ul>',12),s=[r];function p(l,i,n,d,h,_){return t(),o("div",null,s)}const f=e(c,[["render",p]]);export{u as __pageData,f as default};
